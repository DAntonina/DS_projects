# -*- coding: utf-8 -*-
"""Project_0. GitHub.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/119N-aNoIX3MReAl3j_my5oWo3gD497RJ
"""

import numpy as np
number = np.random.randint(1,101)    # загадали число
print ("Загадано число от 1 до 100")

def game_core_v2(number):
    '''Переменными устанавливаем границы диапазона. Находим средний элемент последовательности. Сравниваем его с искомым значением. 
  В зависимости от того, больше оно или меньше среднего элемента, дальнейший поиск будет происходить лишь в левой или правой половине диапазона. 
  Снова находится средний элемент, теперь уже в «выбранной» половине. Если значение среднего элемента окажется равным искомому, то поиск завершен.
  Функция принимает загаданное число и возвращает число попыток'''
    count = 1
    first = 1
    last = 100
    predict = (first+last)//2
    while number != predict:
        count+=1
        if number > predict: 
            first = predict + 1
            predict = (first+last)//2
        elif number < predict: 
            last = predict - 1
            predict = (first+last)//2
    return(count) # выход из цикла, если угадали

def score_game(game_core):
    '''Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число'''
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1,101, size=(1000))
    for number in random_array:
        count_ls.append(game_core(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return(score)

# запускаем
score_game(game_core_v2)